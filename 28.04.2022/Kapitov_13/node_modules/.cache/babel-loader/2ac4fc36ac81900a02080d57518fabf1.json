{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\79272\\\\Documents\\\\\\u0423\\u0447\\u0435\\u0431\\u0430\\\\Web\\\\to-do-app\\\\src\\\\TodoApp.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      text: \"\",\n      selectedType: props.selectedType\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleTypeChange = this.handleTypeChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    console.log(JSON.stringify(this.props));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoAppContainer\",\n      children: [/*#__PURE__*/_jsxDEV(TodoList, {\n        items: this.state.items,\n        selectedType: this.props.selectedType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"new-todo\",\n          children: \"What needs to be done?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"new-todo\",\n          onChange: this.handleChange,\n          value: this.state.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), typesData.map(item => /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"type\",\n            value: item.value,\n            onChange: this.handleTypeChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this), item.value]\n        }, item.key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      text: e.target.value\n    });\n  }\n\n  handleTypeChange(e) {\n    this.setState({\n      selectedType: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (this.state.text.length === 0) {\n      return;\n    }\n\n    const newItem = {\n      text: this.state.text,\n      id: Date.now(),\n      type: this.state.selectedType\n    };\n    this.setState(state => ({\n      items: state.items.concat(newItem),\n      text: \"\"\n    }));\n  }\n\n}\n\nclass TodoList extends React.Component {\n  render() {\n    console.log(JSON.stringify(this.props));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoListContainer\",\n      children: this.props.items.filter(item => this.props.selectedType === item.type || this.props.selectedType === \"Все\").map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todoListItemContainer\",\n        children: item.text\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst typesData = [{\n  key: 0,\n  value: \"Личное\"\n}, {\n  key: 1,\n  value: \"Работа\"\n}, {\n  key: 2,\n  value: \"Учеба\"\n}, {\n  key: 3,\n  value: \"Отдых\"\n}];\nexport default TodoApp;","map":{"version":3,"sources":["C:/Users/79272/Documents/Учеба/Web/to-do-app/src/TodoApp.js"],"names":["React","TodoApp","Component","constructor","props","state","items","text","selectedType","handleChange","bind","handleTypeChange","handleSubmit","render","console","log","JSON","stringify","typesData","map","item","value","key","e","setState","target","preventDefault","length","newItem","id","Date","now","type","concat","TodoList","filter"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,OAAN,SAAsBD,KAAK,CAACE,SAA5B,CAAsC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,IAAI,EAAE,EAAnB;AAAuBC,MAAAA,YAAY,EAAEJ,KAAK,CAACI;AAA3C,KAAb;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKE,YAAL,GAAoB,KAAKA,YAAL,CAAkBF,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAe,KAAKb,KAApB,CAAZ;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE,QAAC,QAAD;AACE,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,KADpB;AAEE,QAAA,YAAY,EAAE,KAAKF,KAAL,CAAWI;AAF3B;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAM,QAAA,QAAQ,EAAE,KAAKI,YAArB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,EAAE,EAAC,UADL;AAEE,UAAA,QAAQ,EAAE,KAAKH,YAFjB;AAGE,UAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWE;AAHpB;AAAA;AAAA;AAAA;AAAA,gBAFF,EAOGW,SAAS,CAACC,GAAV,CAAeC,IAAD,iBACb;AAAA,kCACE;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,KAAK,EAAEA,IAAI,CAACC,KAHd;AAIE,YAAA,QAAQ,EAAE,KAAKV;AAJjB;AAAA;AAAA;AAAA;AAAA,kBADF,EAOGS,IAAI,CAACC,KAPR;AAAA,WAAYD,IAAI,CAACE,GAAjB;AAAA;AAAA;AAAA;AAAA,gBADD,CAPH,eAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA4BD;;AAEDb,EAAAA,YAAY,CAACc,CAAD,EAAI;AACd,SAAKC,QAAL,CAAc;AAAEjB,MAAAA,IAAI,EAAEgB,CAAC,CAACE,MAAF,CAASJ;AAAjB,KAAd;AACD;;AAEDV,EAAAA,gBAAgB,CAACY,CAAD,EAAI;AAClB,SAAKC,QAAL,CAAc;AAAEhB,MAAAA,YAAY,EAAEe,CAAC,CAACE,MAAF,CAASJ;AAAzB,KAAd;AACD;;AAEDT,EAAAA,YAAY,CAACW,CAAD,EAAI;AACdA,IAAAA,CAAC,CAACG,cAAF;;AACA,QAAI,KAAKrB,KAAL,CAAWE,IAAX,CAAgBoB,MAAhB,KAA2B,CAA/B,EAAkC;AAChC;AACD;;AACD,UAAMC,OAAO,GAAG;AACdrB,MAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWE,IADH;AAEdsB,MAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EAFU;AAGdC,MAAAA,IAAI,EAAE,KAAK3B,KAAL,CAAWG;AAHH,KAAhB;AAKA,SAAKgB,QAAL,CAAenB,KAAD,KAAY;AACxBC,MAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,CAAY2B,MAAZ,CAAmBL,OAAnB,CADiB;AAExBrB,MAAAA,IAAI,EAAE;AAFkB,KAAZ,CAAd;AAID;;AA/DmC;;AAkEtC,MAAM2B,QAAN,SAAuBlC,KAAK,CAACE,SAA7B,CAAuC;AACrCW,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAe,KAAKb,KAApB,CAAZ;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,gBACG,KAAKA,KAAL,CAAWE,KAAX,CACE6B,MADF,CAEIf,IAAD,IACE,KAAKhB,KAAL,CAAWI,YAAX,KAA4BY,IAAI,CAACY,IAAjC,IACA,KAAK5B,KAAL,CAAWI,YAAX,KAA4B,KAJjC,EAMEW,GANF,CAMOC,IAAD,iBACH;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,kBACGA,IAAI,CAACb;AADR,SAA4Ca,IAAI,CAACS,EAAjD;AAAA;AAAA;AAAA;AAAA,cAPH;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AAlBoC;;AAqBvC,MAAMX,SAAS,GAAG,CAChB;AAAEI,EAAAA,GAAG,EAAE,CAAP;AAAUD,EAAAA,KAAK,EAAE;AAAjB,CADgB,EAEhB;AAAEC,EAAAA,GAAG,EAAE,CAAP;AAAUD,EAAAA,KAAK,EAAE;AAAjB,CAFgB,EAGhB;AAAEC,EAAAA,GAAG,EAAE,CAAP;AAAUD,EAAAA,KAAK,EAAE;AAAjB,CAHgB,EAIhB;AAAEC,EAAAA,GAAG,EAAE,CAAP;AAAUD,EAAAA,KAAK,EAAE;AAAjB,CAJgB,CAAlB;AAOA,eAAepB,OAAf","sourcesContent":["import React from \"react\";\r\n\r\nclass TodoApp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { items: [], text: \"\", selectedType: props.selectedType };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleTypeChange = this.handleTypeChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  render() {\r\n    console.log(JSON.stringify(this.props));\r\n    return (\r\n      <div className=\"todoAppContainer\">\r\n        <TodoList\r\n          items={this.state.items}\r\n          selectedType={this.props.selectedType}\r\n        />\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label htmlFor=\"new-todo\">What needs to be done?</label>\r\n          <input\r\n            id=\"new-todo\"\r\n            onChange={this.handleChange}\r\n            value={this.state.text}\r\n          />\r\n          {typesData.map((item) => (\r\n            <label key={item.key}>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"type\"\r\n                value={item.value}\r\n                onChange={this.handleTypeChange}\r\n              />\r\n              {item.value}\r\n            </label>\r\n          ))}\r\n          <button>Add</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ text: e.target.value });\r\n  }\r\n\r\n  handleTypeChange(e) {\r\n    this.setState({ selectedType: e.target.value });\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (this.state.text.length === 0) {\r\n      return;\r\n    }\r\n    const newItem = {\r\n      text: this.state.text,\r\n      id: Date.now(),\r\n      type: this.state.selectedType,\r\n    };\r\n    this.setState((state) => ({\r\n      items: state.items.concat(newItem),\r\n      text: \"\",\r\n    }));\r\n  }\r\n}\r\n\r\nclass TodoList extends React.Component {\r\n  render() {\r\n    console.log(JSON.stringify(this.props));\r\n    return (\r\n      <div className=\"todoListContainer\">\r\n        {this.props.items\r\n          .filter(\r\n            (item) =>\r\n              this.props.selectedType === item.type ||\r\n              this.props.selectedType === \"Все\"\r\n          )\r\n          .map((item) => (\r\n            <div className=\"todoListItemContainer\" key={item.id}>\r\n              {item.text}\r\n            </div>\r\n          ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst typesData = [\r\n  { key: 0, value: \"Личное\" },\r\n  { key: 1, value: \"Работа\" },\r\n  { key: 2, value: \"Учеба\" },\r\n  { key: 3, value: \"Отдых\" },\r\n];\r\n\r\nexport default TodoApp;\r\n"]},"metadata":{},"sourceType":"module"}